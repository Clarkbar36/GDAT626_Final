names(train.images) <- names(test.images) <- paste0('pixel', pixs)
View(test.images)
train.labels <- data.frame(label = factor(train.labels))
View(train.labels)
test.labels <- data.frame(label = factor(test.labels))
train.data <- cbind(train.labels, train.images)
View(train.data)
test.data <- cbind(test.labels, test.images)
# May need some changes
library(reticulate)
use_python(python = '/Library/Frameworks/Python.framework/Versions/3.7/bin/python3')
sys <- import("sys")
sys$version
# Get the Python script from:
#
python_file <- "simple_neural_network_fashion_mnist.py"
system2("python3", args = c(python_file), stdout = NULL, stderr = "")
knitr::opts_chunk$set(echo = TRUE)
c("data.table",
"tidyverse",
"plyr",
"dtplyr",
"TTR",
"astsa",
"lubridate",
"tsbox",
"tseries",
"xts",
"zoo",
"forecast",
"openxlsx",
"mlbench",
"caret",
"random",
"artfima",
"tsfeatures"
) -> package_names
for(package_name in package_names) {
if(!is.element(package_name, installed.packages()[,1])) {
install.packages(package_name,
repos = "http://cran.mtu.edu/")
}
library(package_name, character.only=TRUE,
quietly=TRUE,verbose=FALSE)
}
knitr::opts_chunk$set(echo = TRUE)
c("data.table",
"tidyverse",
"plyr",
"dtplyr",
"TTR",
"astsa",
"lubridate",
"tsbox",
"tseries",
"xts",
"zoo",
"forecast",
"openxlsx",
"mlbench",
"caret",
"random",
"tsfeatures"
) -> package_names
for(package_name in package_names) {
if(!is.element(package_name, installed.packages()[,1])) {
install.packages(package_name,
repos = "http://cran.mtu.edu/")
}
library(package_name, character.only=TRUE,
quietly=TRUE,verbose=FALSE)
}
rm(list=c("package_name", "package_names")) # clean up the environment
set.seed(61818)
options(show.signif.stars = FALSE)  # Don't confuse significance & effect size!
options(scipen=999) # Turn off scientifc notations
setwd("~/Box/Alissa Private Folder/Alex/Grad School/GDAT626/Final Project")
c02 = read.csv("CO2.csv")
ice = read.csv("Ice.csv")
temp = read.csv("temp.csv")
glimpse(c02)
summary(c02)
kable(glimpse(c02))
knitr::opts_chunk$set(echo = TRUE)
c("data.table",
"tidyverse",
"plyr",
"dtplyr",
"TTR",
"astsa",
"lubridate",
"tsbox",
"tseries",
"xts",
"zoo",
"forecast",
"openxlsx",
"mlbench",
"caret",
"random",
"tsfeatures",
"kable"
) -> package_names
for(package_name in package_names) {
if(!is.element(package_name, installed.packages()[,1])) {
install.packages(package_name,
repos = "http://cran.mtu.edu/")
}
library(package_name, character.only=TRUE,
quietly=TRUE,verbose=FALSE)
}
knitr::opts_chunk$set(echo = TRUE)
c("data.table",
"tidyverse",
"plyr",
"dtplyr",
"TTR",
"astsa",
"lubridate",
"tsbox",
"tseries",
"xts",
"zoo",
"forecast",
"openxlsx",
"mlbench",
"caret",
"random",
"tsfeatures",
""
) -> package_names
for(package_name in package_names) {
if(!is.element(package_name, installed.packages()[,1])) {
install.packages(package_name,
repos = "http://cran.mtu.edu/")
}
library(package_name, character.only=TRUE,
quietly=TRUE,verbose=FALSE)
}
knitr::opts_chunk$set(echo = TRUE)
c("data.table",
"tidyverse",
"plyr",
"dtplyr",
"TTR",
"astsa",
"lubridate",
"tsbox",
"tseries",
"xts",
"zoo",
"forecast",
"openxlsx",
"mlbench",
"caret",
"random",
"tsfeatures"
) -> package_names
for(package_name in package_names) {
if(!is.element(package_name, installed.packages()[,1])) {
install.packages(package_name,
repos = "http://cran.mtu.edu/")
}
library(package_name, character.only=TRUE,
quietly=TRUE,verbose=FALSE)
}
rm(list=c("package_name", "package_names")) # clean up the environment
set.seed(61818)
options(show.signif.stars = FALSE)  # Don't confuse significance & effect size!
options(scipen=999) # Turn off scientifc notations
setwd("~/Box/Alissa Private Folder/Alex/Grad School/GDAT626/Final Project")
kable(c02)
c("data.table",
"tidyverse",
"plyr",
"dtplyr",
"TTR",
"astsa",
"lubridate",
"tsbox",
"tseries",
"xts",
"zoo",
"forecast",
"openxlsx",
"mlbench",
"caret",
"random",
"tsfeatures",
"knitr"
) -> package_names
kable(glimpse(c02))
knitr::opts_chunk$set(echo = TRUE)
c("data.table",
"tidyverse",
"plyr",
"dtplyr",
"TTR",
"astsa",
"lubridate",
"tsbox",
"tseries",
"xts",
"zoo",
"forecast",
"openxlsx",
"mlbench",
"caret",
"random",
"tsfeatures",
"knitr"
) -> package_names
for(package_name in package_names) {
if(!is.element(package_name, installed.packages()[,1])) {
install.packages(package_name,
repos = "http://cran.mtu.edu/")
}
library(package_name, character.only=TRUE,
quietly=TRUE,verbose=FALSE)
}
rm(list=c("package_name", "package_names")) # clean up the environment
set.seed(61818)
options(show.signif.stars = FALSE)  # Don't confuse significance & effect size!
options(scipen=999) # Turn off scientifc notations
setwd("~/Box/Alissa Private Folder/Alex/Grad School/GDAT626/Final Project")
kable(glimpse(c02))
kable(glimpse(c02))
summary(c02)
c02.ts <- ts(c02$trend..season.corr., start = c(1958,3), frequency = 12)
head(c02.ts,20)
plot(c02.ts)
abline(reg=lm(c02.ts~time(c02.ts)), col = "blue")
plot(decompose(c02.ts))
boxplot(c02.ts~cycle(c02.ts))
plot(c02.ts, main = "CO2 Time Series", ylab = "Trend", xlab = "Year")
boxplot(c02.ts~cycle(c02.ts), main = "CO2 Boxplot")
plot(c02.ts, main = "CO2 Time Series", ylab = "Trend", xlab = "Year")
abline(reg=lm(c02.ts~time(c02.ts)), col = "blue")
plot(decompose(c02.ts))
boxplot(c02.ts~cycle(c02.ts), main = "CO2 Boxplot", ylab = "Trend", xlab = "Month")
plot(c02.ts, main = "CO2 Time Series", ylab = "Trend", xlab = "Year")
abline(reg=lm(c02.ts~time(c02.ts)), col = "blue")
plot(decompose(c02.ts))
boxplot(c02.ts~cycle(c02.ts), main = "CO2 Boxplot", ylab = "Trend", xlab = "Month")
plot(c02.ts, main = "CO2 Time Series", ylab = "Trend", xlab = "Year")
abline(reg=lm(c02.ts~time(c02.ts)), col = "blue")
plot(decompose(c02.ts))
boxplot(c02.ts~cycle(c02.ts), main = "CO2 Boxplot", ylab = "Trend", xlab = "Month")
hist(c02.ts)
ks.test(c02.ts, "dnorm")
hist(c02.ts, main = "CO2 Histogram", xlab = "Trend")
ks.test(c02.ts, "dnorm")
adf.test(c02.ts)
xn <- c02.ts
xnp1 <- shift(c02.ts,9)
autoplot(xnp1, xn) + geom_line()
xn <- c02.ts
xnp1 <- shift(c02.ts,1)
autoplot(xnp1, xn) + geom_line()
xn <- c02.ts
xnp1 <- shift(c02.ts,9)
autoplot(xnp1, xn) + geom_line()
autoplot(xnp1, xn) + geom_line() + ggtitle("Shift by 9 - CO2")
autoplot(xnp1, xn) + geom_line() + ggtitle("Shift by 9 - CO2") + xlab("Shift")
autoplot(xnp1, xn) + geom_line() + ggtitle("Shift by 9 - CO2") + ylab("Shift")
autoplot(xnp1, xn) + geom_line() + ggtitle("Shift by 9 - CO2") + ylab("Shift") + theme(legend.title = element_blank())
autoplot(xnp1, xn) + geom_line() + ggtitle("Shift by 9 - CO2") + ylab("Shift") + theme(legend = element_blank())
autoplot(xnp1, xn) + geom_line() + ggtitle("Shift by 9 - CO2") + ylab("Shift") + theme(legend.position = "none")
```{r autocorrelate c02, echo=FALSE}
autoplot(acf(c02.ts, plot = FALSE))
autoplot(pacf(c02.ts, plot = FALSE))
autoplot(acf(c02.ts, plot = FALSE)) + ggtitle("ACF - CO2")
autoplot(pacf(c02.ts, plot = FALSE)) + ggtitle("PCF - CO2")
TSA::periodogram(c02.ts)
TSA::periodogram(c02.ts, main = "CO2 Periodogram")
kable(glimpse(ice))
glimpse(c02)
ggplot(xnp1, xn) + geom_line() + ggtitle("Shift by 9 - CO2") + ylab("Shift") + theme(legend.position = "none")
plot(xnp1, xn, main = "Shift by 9 - CO2", ylab = "Shift")
plot(xnp1, xn, main = "Shift by 9 - CO2", ylab = "Shift", "l")
plot(xnp1, xn, main = "Shift by 9 - CO2", ylab = "Shift", type = "l")
plot(xnp1, xn, main = "Shift by 9 - CO2", xlab = "Shift", type = "l")
plot(xnp1, xn, main = "Shift by 9 - CO2", xlab = "Shift", ylab = "CO2", type = "l")
plot(ice.ts)
ice.ts <- ts(ice$area, start = c(1979), frequency = 1)
ice.ts
plot(ice.ts)
abline(reg=lm(ice.ts~time(ice.ts)), col = "blue")
plot(ice.ts, main = "Time Series of Ice Levels", xlab = "Year", ylab = "Area")
abline(reg=lm(ice.ts~time(ice.ts)), col = "blue")
hist(ice.ts, main = "Histogram of Ice Levels")
ks.test(ice.ts, "dnorm")
adf.test(ice.ts)
xn <- ice$area
xnp1 <- shift(ice$area, 3)
plot(xnp1, xn, main = "Shift by 3 - Ice", xlab = "Shift", ylab = "CO2", type = "l")
xn <- ice$area
xnp1 <- shift(ice$area, 3)
plot(xnp1, xn, main = "Shift by 3 - Ice", xlab = "Shift", ylab = "Ice", type = "l")
autoplot(acf(ice.ts, plot = FALSE)) + ggtitle("ACF - Ice")
autoplot(pacf(ice.ts, plot = FALSE)) + ggtitle("PACF - Ice")
TSA::periodogram(ice.ts, main = "Ice Periodogram")
glimpse(temp)
temp.ts <- ts(temp$Lowess.5., start = c(1880), frequency = 1)
temp.ts
plot(temp.ts)
abline(reg=lm(temp.ts~time(temp.ts)), col = "blue")
plot(temp.ts, main = "Time Series of Temperature", xlab = "Year", ylab = "Lowess 5")
abline(reg=lm(temp.ts~time(temp.ts)), col = "blue")
hist(temp.ts)
ks.test(temp.ts, "dnorm")
hist(temp.ts, main = "Histogram of Ice Levels")
ks.test(temp.ts, "dnorm")
adf.test(temp.ts)
xn <- temp$Lowess.5.
xnp1 <- shift(temp$Lowess.5., 5)
plot(xnp1, xn, main = "Shift by 5 - Ice", xlab = "Shift", ylab = "Lowess 5", type = "l")
xn <- temp$Lowess.5.
xnp1 <- shift(temp$Lowess.5., 1)
plot(xnp1, xn, main = "Shift by 5 - Ice", xlab = "Shift", ylab = "Lowess 5", type = "l")
xn <- temp$Lowess.5.
xnp1 <- shift(temp$Lowess.5., 5)
plot(xnp1, xn, main = "Shift by 5 - Ice", xlab = "Shift", ylab = "Lowess 5", type = "l")
autoplot(acf(temp.ts, plot = FALSE)) + ggtitle("ACF - Temp")
autoplot(pacf(temp.ts, plot = FALSE)) + ggtitle("PACF - Temp")
TSA::periodogram(temp.ts, main = "Ice Periodogram")
TSA::periodogram(temp.ts, main = "Temperature Periodogram")
View(ice)
ice.ts <- ts(ice$area, start = c(1979,10), frequency = 10)
ice.ts
plot(decompose(ice.ts))
View(ice)
ice.ts <- ts(ice$area, start = c(1979,10), end = c(2019,10), frequency = 10)
plot(decompose(ice.ts))
View(ice)
ice.ts <- ts(ice$area, start = c(1979), end = c(2019), frequency = 1)
plot(decompose(ice.ts))
ice.ts <- ts(ice$area, start = c(1979), end = c(2019), frequency = 1)
ice.ts
View(ice)
plot(ice.ts, main = "Time Series of Ice Levels", xlab = "Year", ylab = "Area")
abline(reg=lm(ice.ts~time(ice.ts)), col = "blue")
ice.ts <- ts(ice$area, start = c(1979, 10), end = c(2019, 10), frequency = 10)
ice.ts
plot(ice.ts, main = "Time Series of Ice Levels", xlab = "Year", ylab = "Area")
abline(reg=lm(ice.ts~time(ice.ts)), col = "blue")
ice.ts <- ts(ice$area, start = c(1979), end = c(2019), frequency = 1)
ice.ts
plot(ice.ts, main = "Time Series of Ice Levels", xlab = "Year", ylab = "Area")
abline(reg=lm(ice.ts~time(ice.ts)), col = "blue")
co2.garch <- garch(c02$trend..season.corr.)
autoplot(forecast(co2.garch$fitted.values[, 1], level = c(95), h=10))
co2.garch <- garch(c02$trend..season.corr.)
autoplot(forecast(co2.garch$fitted.values[, 1], level = c(95), h=1000))
c02.arima <- forecast::auto.arima(c02.ts)
Box.test(c02.ts, lag = 1, type = c("Ljung-Box"))
var(fitted(c02.arima))
autoplot(forecast(c02.arima, level = c(95), h=1000))
c02.arima <- forecast::auto.arima(c02.ts)
Box.test(c02.ts, lag = 1, type = c("Ljung-Box"))
var(fitted(c02.arima))
autoplot(forecast(c02.arima, level = c(95), h=600)) + ggtitle("Forecast CO2 - 95% CI for 600 periods")
autoplot(forecast(c02.arima, level = c(95), h=600)) + ggtitle("Forecast CO2 - 95% CI for 600 periods (50 years)") + xlab("Year") + ylab("CO2 Levels")
co2.garch <- garch(c02$trend..season.corr.)
autoplot(forecast(co2.garch$fitted.values[, 1], level = c(95), h=600)) ggtitle("ARIMA Forecast CO2 - 95% CI for 600 periods (50 years)") + xlab("Year") + ylab("CO2 Levels")
co2.garch <- garch(c02$trend..season.corr.)
autoplot(forecast(co2.garch$fitted.values[, 1], level = c(95), h=600)) + ggtitle("ARIMA Forecast CO2 - 95% CI for 600 periods (50 years)") + xlab("Year") + ylab("CO2 Levels")
autoplot(forecast(co2.garch$fitted.values[, 1], level = c(95), h=600)) + ggtitle("GARCH Forecast CO2 - 95% CI for 600 periods (50 years)") + xlab("Time") + ylab("CO2 Levels")
ice.arima <- forecast::auto.arima(ice.ts)
Box.test(ice.ts, lag = 5, type = c("Ljung-Box"))
var(fitted(ice.arima))
autoplot(forecast(ice.arima, level = c(95), h=10)) + ggtitle("ARIMA Forecast Arctic Sea Ice Level - 95% CI for 10 years") + xlab("Year") + ylab("Arctic Sea Ice Level")
autoplot(forecast(ice.arima, level = c(90), h=10)) + ggtitle("ARIMA Forecast Arctic Sea Ice Level - 95% CI for 10 years") + xlab("Year") + ylab("Arctic Sea Ice Level")
autoplot(forecast(ice.arima, level = c(60), h=10)) + ggtitle("ARIMA Forecast Arctic Sea Ice Level - 95% CI for 10 years") + xlab("Year") + ylab("Arctic Sea Ice Level")
autoplot(forecast(ice.arima, level = c(95), h=10)) + ggtitle("ARIMA Forecast Arctic Sea Ice Level - 95% CI for 10 years") + xlab("Year") + ylab("Arctic Sea Ice Level")
ice.garch <- garch(ice$area)
autoplot(forecast(ice.garch$fitted.values[, 1], level = c(95), h=10)) + ggtitle("GARCH Forecast Arctic Sea Ice Level - 95% CI for 10 years") + xlab("Year") + ylab("Arctic Sea Ice Level")
ice.garch <- garch(ice$area)
autoplot(forecast(ice.garch$fitted.values[, 1], level = c(95), h=10)) + ggtitle("GARCH Forecast Arctic Sea Ice Level - 95% CI for 10 years") + xlab("Year") + ylab("Arctic Sea Ice Level")
### GARCH - Arctic Sea Ice Level:
```{r ice, include = FALSE}
autoplot(forecast(ice.garch$fitted.values[, 1], level = c(95), h=10)) + ggtitle("GARCH Forecast Arctic Sea Ice Level - 95% CI for 10 years") + xlab("Year") + ylab("Arctic Sea Ice Level")
ice.garch <- garch(ice$area)
autoplot(forecast(ice.garch$fitted.values[, 1], level = c(95), h=10)) + ggtitle("GARCH Forecast Arctic Sea Ice Level - 95% CI for 10 years") + xlab("Year") + ylab("Arctic Sea Ice Level")
temp.arima <- forecast::auto.arima(temp.ts)
Box.test(temp.ts, lag = 5, type = c("Ljung-Box"))
var(fitted(temp.arima))
autoplot(forecast(temp.arima, level = c(95), h=10)) + ggtitle("ARIMA Forecast Temperature - 95% CI for 10 years") + xlab("Year") + ylab("Temperature")
temp.garch <- garch(temp$Lowess.5.)
autoplot(forecast(temp.garch$fitted.values[, 1], level = c(95), h=10)) + ggtitle("GARCH Forecast Temperature - 95% CI for 10 years") + xlab("Year") + ylab("Temperature")
glimpse(c02)
View(c02)
glimpse(ice)
View(ice)
glimpse(temp)
View(temp)
c02.ts <- ts(c02$trend..season.corr., start = c(1958,3), frequency = 12)
head(c02.ts,20)
ice.garch <- garch(ice$area)
autoplot(forecast(ice.garch$fitted.values[, 1], level = c(95), h=10)) + ggtitle("GARCH Forecast Arctic Sea Ice Level - 95% CI for 10 years") + xlab("Year") + ylab("Arctic Sea Ice Level")
tail(c02.ts,5)
tail(c02.ts,20)
c02.ts <- ts(c02$trend..season.corr., start = c(1958,3), frequency = 12)
head(c02.ts,20)
tail(c02.ts,20)
View(c02)
View(c02)
c02.ts <- ts(c02$trend..season.corr., start = c(1958,3), end = c(2019,10) frequency = 12)
c02.ts <- ts(c02$trend..season.corr., start = c(1958,3), end = c(2019,10), frequency = 12)
head(c02.ts,20)
tail(c02.ts,20)
c02.ts <- ts(c02$trend..season.corr., start = c(1958,3), end = c(2019,10), frequency = 12)
head(c02.ts,20)
tail(c02.ts,20)
head(c02.ts,20)
ice.ts <- ts(ice$area, start = c(1979), end = c(2019), frequency = 1)
ice.ts
c02.ts
temp.ts <- ts(temp$Lowess.5., start = c(1880), frequency = 1)
temp.ts
### Plot of $CO_2$:
```{r plot c02.ts, echo=FALSE}
plot(c02.ts, main = "CO2 Time Series", ylab = "Trend", xlab = "Year")
abline(reg=lm(c02.ts~time(c02.ts)), col = "blue")
plot(decompose(c02.ts))
boxplot(c02.ts~cycle(c02.ts), main = "CO2 Boxplot", ylab = "Trend", xlab = "Month")
plot(ice.ts, main = "Time Series of Ice Levels", xlab = "Year", ylab = "Area")
abline(reg=lm(ice.ts~time(ice.ts)), col = "blue")
plot(temp.ts, main = "Time Series of Temperature", xlab = "Year", ylab = "Lowess 5")
abline(reg=lm(temp.ts~time(temp.ts)), col = "blue")
hist(c02.ts, main = "CO2 Histogram", xlab = "Trend")
ks.test(c02.ts, "dnorm")
hist(ice.ts, main = "Histogram of Ice Levels")
ks.test(ice.ts, "dnorm")
hist(temp.ts, main = "Histogram of Temperature")
ks.test(temp.ts, "dnorm")
temp$decade <- rep(1:10)
temp$decade <- 1:10
temp$decade <- rep(1:10, each = 1)
decade <- data.frame(decade = rep(1:10, times = 14))
View(decade)
temp <- bind_cols(temp, decade)
View(decade)
decade <- decade[-1,]
decade <- data.frame(decade = rep(1:10, times = 14))
decade <- decade[,-1]
decade <- data.frame(decade = rep(1:10, times = 14))
decade <- decade[-1]
decade <- data.frame(decade = rep(1:10, times = 14))
decade <- decade[-1,]
decade <- data.frame(decade = rep(1:10, times = 14))
decade <- decade[-140,]
temp <- bind_cols(temp, decade)
View(temp)
adf.test(c02.ts)
adf.test(ice.ts)
adf.test(temp.ts)
xn <- c02.ts
xnp1 <- shift(c02.ts,9)
plot(xnp1, xn, main = "Shift by 9 - CO2", xlab = "Shift", ylab = "CO2", type = "l")
xn <- ice$area
xnp1 <- shift(ice$area, 3)
plot(xnp1, xn, main = "Shift by 3 - Ice", xlab = "Shift", ylab = "Ice", type = "l")
xn <- temp$Lowess.5.
xnp1 <- shift(temp$Lowess.5., 5)
plot(xnp1, xn, main = "Shift by 5 - Ice", xlab = "Shift", ylab = "Lowess 5", type = "l")
autoplot(acf(c02.ts, plot = FALSE)) + ggtitle("ACF - CO2")
autoplot(pacf(c02.ts, plot = FALSE)) + ggtitle("PACF - CO2")
autoplot(acf(ice.ts, plot = FALSE)) + ggtitle("ACF - Ice")
autoplot(pacf(ice.ts, plot = FALSE)) + ggtitle("PACF - Ice")
autoplot(acf(temp.ts, plot = FALSE)) + ggtitle("ACF - Temp")
autoplot(pacf(temp.ts, plot = FALSE)) + ggtitle("PACF - Temp")
TSA::periodogram(c02.ts, main = "CO2 Periodogram")
TSA::periodogram(ice.ts, main = "Ice Periodogram")
TSA::periodogram(temp.ts, main = "Temperature Periodogram")
c02.arima <- forecast::auto.arima(c02.ts)
Box.test(c02.ts, lag = 1, type = c("Ljung-Box"))
var(fitted(c02.arima))
autoplot(forecast(c02.arima, level = c(95), h=600)) + ggtitle("ARIMA Forecast CO2 - 95% CI for 600 periods (50 years)") + xlab("Year") + ylab("CO2 Levels")
c02.arima <- forecast::auto.arima(c02.ts)
Box.test(c02.ts, lag = 1, type = c("Ljung-Box"))
#var(fitted(c02.arima))
autoplot(forecast(c02.arima, level = c(95), h=600)) + ggtitle("ARIMA Forecast CO2 - 95% CI for 600 periods (50 years)") + xlab("Year") + ylab("CO2 Levels")
Box.test(c02.ts, lag = 3, type = c("Ljung-Box"))
#var(fitted(c02.arima))
autoplot(forecast(c02.arima, level = c(95), h=600)) + ggtitle("ARIMA Forecast CO2 - 95% CI for 600 periods (50 years)") + xlab("Year") + ylab("CO2 Levels")
co2.garch <- garch(c02$trend..season.corr.)
autoplot(forecast(co2.garch$fitted.values[, 1], level = c(95), h=600)) + ggtitle("GARCH Forecast CO2 - 95% CI for 600 periods (50 years)") + xlab("Time") + ylab("CO2 Levels")
autoplot(forecast(co2.garch$fitted.values[, 1], level = c(95), h=120)) + ggtitle("GARCH Forecast CO2 - 95% CI for 600 periods (50 years)") + xlab("Time") + ylab("CO2 Levels")
#var(fitted(c02.arima))
autoplot(forecast(c02.arima, level = c(95), h=120)) + ggtitle("ARIMA Forecast CO2 - 95% CI for 600 periods (50 years)") + xlab("Year") + ylab("CO2 Levels")
#var(fitted(c02.arima))
autoplot(forecast(c02.arima, level = c(95), h=6000)) + ggtitle("ARIMA Forecast CO2 - 95% CI for 600 periods (50 years)") + xlab("Year") + ylab("CO2 Levels")
#var(fitted(c02.arima))
autoplot(forecast(c02.arima, level = c(95), h=600)) + ggtitle("ARIMA Forecast CO2 - 95% CI for 600 periods (50 years)") + xlab("Year") + ylab("CO2 Levels")
autoplot(forecast(co2.garch$fitted.values[, 1], level = c(95), h=600)) + ggtitle("GARCH Forecast CO2 - 95% CI for 120 periods (10 years)") + xlab("Time") + ylab("CO2 Levels")
autoplot(forecast(ice.arima, level = c(95), h=50)) + ggtitle("ARIMA Forecast Arctic Sea Ice Level - 95% CI for 10 years") + xlab("Year") + ylab("Arctic Sea Ice Level")
autoplot(forecast(ice.arima, level = c(95), h=20)) + ggtitle("ARIMA Forecast Arctic Sea Ice Level - 95% CI for 10 years") + xlab("Year") + ylab("Arctic Sea Ice Level")
autoplot(forecast(ice.arima, level = c(95), h=10)) + ggtitle("ARIMA Forecast Arctic Sea Ice Level - 95% CI for 10 years") + xlab("Year") + ylab("Arctic Sea Ice Level")
ice.arima <- forecast::auto.arima(ice.ts)
Box.test(ice.ts, lag = 5, type = c("Ljung-Box"))
#var(fitted(ice.arima))
autoplot(forecast(ice.arima, level = c(95), h=10)) + ggtitle("ARIMA Forecast Arctic Sea Ice Level - 95% CI for 10 years") + xlab("Year") + ylab("Arctic Sea Ice Level")
ice.garch <- garch(ice$area)
autoplot(forecast(ice.garch$fitted.values[, 1], level = c(95), h=10)) + ggtitle("GARCH Forecast Arctic Sea Ice Level - 95% CI for 10 years") + xlab("Year") + ylab("Arctic Sea Ice Level")
temp.arima <- forecast::auto.arima(temp.ts)
Box.test(temp.ts, lag = 5, type = c("Ljung-Box"))
#var(fitted(temp.arima))
autoplot(forecast(temp.arima, level = c(95), h=10)) + ggtitle("ARIMA Forecast Temperature - 95% CI for 10 years") + xlab("Year") + ylab("Temperature")
temp.garch <- garch(temp$Lowess.5.)
autoplot(forecast(temp.garch$fitted.values[, 1], level = c(95), h=10)) + ggtitle("GARCH Forecast Temperature - 95% CI for 10 years") + xlab("Year") + ylab("Temperature")
setwd("~/Documents/GitHub/GDAT626_Final")
